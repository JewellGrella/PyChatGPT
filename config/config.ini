;项目整体配置
[project]
;项目名
app_name = PyChatGPT
;项目版本
version = 1.0.0
;项目作者
author = JohnsonQiu
;项目作者邮箱
author_email =SchrodingersFish@outlook.com
;项目描述
description = PyChatGPT project is a Dcar car recommendation advertorial generation program based on chatGPT3.5 model

;chatgpt生成稿子配置
[chatgpt]
;API请求地址
api_url=https://api.openai.com/
;API key默认5个
key1=sk-8**********************************************O
key2=sk-e**********************************************f
key3=sk-P**********************************************U
key4=sk-w**********************************************l
key5=sk-a**********************************************R
;生成稿子的线程数
thread_number=1
;生成稿子的源文件目录
src_dir=D:\GPT\稿子
;生成稿子的目标文件目录前缀
dist_file_name_prefix=GPT
;生成稿子的目标文件目录个数
dist_dir_number=5
;目标文件夹的路径前缀
dist_dir=D:\GPT\成品
;角色
role=你是一个专业车评人，专门写汽车测评文章
;话题模板话术
topic=用专业吸引人的风格原创一篇650字左右?的汽车推荐文章，参数必须按照（*），并且所有参数都要重新组织语言来介绍，参数不可以硬搬，其次内容语句词汇遵循中国广告法，不写优惠政策和国家补贴、内容顺序按照6段来写；第1段标题：20-30字的吸引人的标题，借鉴案例这种标题，并创作更好的，不可以完全抄袭案例（案例：1、新能源好车XXX，支持快充，纯电续航XXXXkm。）；第2段段首以”开篇引言，“开头，简短的句子引出车型，不用介绍车，借鉴案例这种，并创作更好的，不可以完全抄袭案例（案例：1、本期小编给大家带来的新能源车型是XXX，下面我们看看它的各方面表现吧。2、每一款新能源车都有自己独特的优势，而今天我们要推荐的这款车是XXX，让我们一起来看看它的各方面表现吧。）；第3段段首以”外观方面，“开头，简短的介绍汽车外观设计特点；第4段段首以“内饰方面，”开头，详细的介绍内饰参数；第5段段首以”动力方面，“开头，详细介绍动力参数以及其他优点；第6段段首以“官方指导价，”开头，介绍官方指导价后并且简短的结尾，比如引出下一篇或者讨论或者引起读者购买欲望的简短句子结尾，结尾不要赞扬车子，借鉴案例这种，并创作更好的，不可以完全抄袭案例（案例：1、如果你预算足够，可以线下实体预约试驾，也许亲身体验后，会有不同的感受。2、对这款车你有什么看法，欢迎评论区讨论。3、看完本文，你觉得这款车怎么样呢？）

;生成参数的爬虫配置
[params]
;手动爬虫时的车型，用英文逗号分割
series=秦PLUS DM-i,哈弗枭龙MAX
;输出参数txt文档的目录
save_dir=static\params
;是否将爬虫数据保存到数据库
save_db=false
;是否开启自动爬虫
auto=false
;自动爬虫时的临时保存车型的文件名
name=car_series.txt
;自动爬虫爬取的起始页和结束页
start=1
end=20

;日志记录相关配置
[logging]
; 日志文件名
file = PyChatGPT_log.log
; 日志级别
level = INFO
; 日志格式
format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
; 日志日期格式
date_format = %Y-%m-%d %H:%M:%S
; 日志编码
encoding = utf-8
; 日志文件模式
mode = a
; 日志文件延迟
delay = true
; 日志文件备份个数
backupCount = 5
; 日志文件最大字节数
maxBytes = 10*1024*1024
; 日志文件间隔时间
interval = 1
; 日志文件UTC时间
utc = true
; 日志文件备份时间
atTime = midnight
